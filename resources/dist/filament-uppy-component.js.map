{"mappings":"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","sources":["resources/js/filament-uppy-component.js"],"sourcesContent":["import Uppy from '@uppy/core';\nimport AwsS3 from '@uppy/aws-s3';\nimport FileInput from '@uppy/file-input';\nimport prettierBytes from '@transloadit/prettier-bytes';\n\nwindow.fileUploaderComponent = function fileUploaderComponent({\n    state,\n\n    uploadEndpoint,\n    successEndpoint,\n    errorEndpoint,\n    deleteEndpoint,\n}) {\n    return {\n        state,\n\n        busy: false,\n\n        dragDepth: 0,\n\n        filesInProgress: {},\n\n        uppy: new Uppy({ autoProceed: true, allowMultipleUploads: true }),\n\n        init() {\n            console.log('fileUploaderComponent init');\n            this.state = {};\n\n            window.addEventListener('beforeunload', (e) => {\n                if (!this.busy) return;\n                e.preventDefault();\n                e.returnValue = 'Are you sure you want to leave? Uploads in progress will be cancelled.';\n            });\n\n            this.uppy\n                .on('file-added', (file) => {\n                    this.busy = true;\n                    this.filesInProgress[file.id] = {\n                        id: file.id,\n                        name: file.name,\n                        size: file.size,\n                        progress: 0,\n                    };\n                })\n                .on('upload-progress', (file, progress) => this.filesInProgress[file.id].progress = ((progress.bytesUploaded / progress.bytesTotal) * 100).toFixed(0))\n                .on('upload-success', (file, response) => {\n                    this.removeFileInProgress(file.id);\n                    this.state[file.id] = {\n                        id: file.id,\n                        name: file.name,\n                        size: file.size,\n                        url: response.uploadURL,\n                    };\n\n                    if (!!successEndpoint) {\n                        const key = response.uploadURL.split('/').pop();\n                        const uuid = key.split('.')[0];\n                        const name = file.name;\n\n                        fetch(successEndpoint, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').content,\n                            },\n                            body: JSON.stringify({key, uuid, name}),\n                        });\n                    }\n                })\n                .on('upload-error', (file, error, response) => {\n                    this.filesInProgress[file.id].error = true;\n                    this.busy = true;\n\n                    if (!!errorEndpoint) {\n                        fetch(errorEndpoint, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').content,\n                            },\n                            body: JSON.stringify({\n                                name: file.name,\n                                size: file.size,\n                                error,\n                            }),\n                        });\n                    }\n                });\n\n            this.uppy.use(AwsS3, {\n                endpoint: uploadEndpoint,\n                getChunkSize: (file) => 100 * 1024 * 1024, // 100MB\n            });\n\n            this.uppy.use(FileInput, {\n                target: this.$refs.fileInput,\n                pretty: false,\n            });\n        },\n\n        hovering() {\n            return this.dragDepth > 0;\n        },\n\n        removeFileInProgress(id) {\n            this.uppy.removeFile(id);\n            delete this.filesInProgress[id];\n            this.recalculateBusy();\n        },\n\n        removeCompletedFile(id) {\n            const key = this.state[id].url.split('/').pop();\n            const uuid = key.split('.')[0];\n\n            delete this.state[id];\n\n            if (!!deleteEndpoint) {\n                fetch(deleteEndpoint, {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').content,\n                    },\n                    body: JSON.stringify({uuid}),\n                });\n            }\n        },\n\n        recalculateBusy() {\n            for (const file of this.uppy.getFiles()) {\n                if (file.error || file.progress.bytesUploaded < file.progress.bytesTotal) {\n                    this.busy = true;\n                    return;\n                }\n            }\n\n            this.busy = false;\n        },\n\n        humanReadableFilesize(bytes) {\n            return prettierBytes(bytes);\n        }\n    }\n}\n"],"names":[],"version":3,"file":"filament-uppy-component.js.map"}